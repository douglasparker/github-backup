name: Release

on:
  schedule:
    - cron: "0 * * * *"

  workflow_dispatch:

env:
  FULL_VERSION: ""
  MAJOR_VERSION: ""
  MINOR_VERSION: ""
  PATCH_VERSION: ""
  REGISTRY: ghcr.io

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Check for the latest stable version
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install github-backup

          FULL_VERSION="$(echo "$(cut -d ':' -f 2 <(echo "$(pip show github-backup | grep "Version")"))")"
          FULL_VERSION="$(echo "$FULL_VERSION" | tr -d '[:space:]')"

          MAJOR_VERSION="$(echo "$(cut -d '.' -f 1 <(echo "$FULL_VERSION"))")"
          MAJOR_VERSION="$(echo "$MAJOR_VERSION" | tr -d '[:space:]')"

          MINOR_VERSION="$(echo "$(cut -d '.' -f 2 <(echo "$FULL_VERSION"))")"
          MINOR_VERSION="$(echo "$MINOR_VERSION" | tr -d '[:space:]')"

          PATCH_VERSION="$(echo "$(cut -d '.' -f 3 <(echo "$FULL_VERSION"))")"
          PATCH_VERSION="$(echo "$PATCH_VERSION" | tr -d '[:space:]')"

          echo "FULL_VERSION="$FULL_VERSION"" >> $GITHUB_ENV
          echo "MAJOR_VERSION="$MAJOR_VERSION"" >> $GITHUB_ENV
          echo "MINOR_VERSION="$MINOR_VERSION"" >> $GITHUB_ENV
          echo "PATCH_VERSION="$PATCH_VERSION"" >> $GITHUB_ENV
      
      - name: Login to the Docker Hub Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check if the release was already published to the Docker Registry
        id: docker_release_check
        continue-on-error: true
        run: |
          docker manifest inspect ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.FULL_VERSION }}
      
      - name: Build the Docker image and publish to the Docker Registry
        uses: docker/build-push-action@v4
        if: steps.docker_release_check.outcome == 'failure'
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.FULL_VERSION }}
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.MAJOR_VERSION }}
            ${{ env.REGISTRY }}/${{ github.repository }}:latest