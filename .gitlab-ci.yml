variables:
  FULL_VERSION: ""
  MAJOR_VERSION: ""
  MINOR_VERSION: ""
  PATCH_VERSION: ""

build:docker:
  image: docker:23
  stage: build
  only:
    - schedules
    - triggers
  artifacts:
    paths:
      - docker.tar
    reports:
      dotenv: build.env
    expire_in: 10 mins
  before_script:
    - |
      apk update
      apk add curl
      apk add py3-pip
      pip install github-backup
  script:
    - |
      FULL_VERSION="$(echo "$(cut -d ':' -f 2 <(echo "$(pip show github-backup | grep "Version")"))")"
      FULL_VERSION="$(echo "$FULL_VERSION" | tr -d '[:space:]')"

      MAJOR_VERSION="$(echo "$(cut -d '.' -f 1 <(echo "$FULL_VERSION"))")"
      MAJOR_VERSION="$(echo "$MAJOR_VERSION" | tr -d '[:space:]')"

      MINOR_VERSION="$(echo "$(cut -d '.' -f 2 <(echo "$FULL_VERSION"))")"
      MINOR_VERSION="$(echo "$MINOR_VERSION" | tr -d '[:space:]')"

      PATCH_VERSION="$(echo "$(cut -d '.' -f 3 <(echo "$FULL_VERSION"))")"
      PATCH_VERSION="$(echo "$PATCH_VERSION" | tr -d '[:space:]')"

      echo "FULL_VERSION="$FULL_VERSION"" >> build.env
      echo "MAJOR_VERSION="$MAJOR_VERSION"" >> build.env
      echo "MINOR_VERSION="$MINOR_VERSION"" >> build.env
      echo "PATCH_VERSION="$PATCH_VERSION"" >> build.env

      docker login "$CI_REGISTRY" --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD"

      set +e
      docker manifest inspect "$CI_REGISTRY_IMAGE:$FULL_VERSION"
      if [ $? -ne 0 ]; then
        docker build --build-arg VERSION="$FULL_VERSION" \
          -t "$CI_REGISTRY_IMAGE:$FULL_VERSION" \
          -t "$CI_REGISTRY_IMAGE:$MAJOR_VERSION.$MINOR_VERSION" \
          -t "$CI_REGISTRY_IMAGE:$MAJOR_VERSION" \
          .
        
        docker save --output "$CI_PROJECT_DIR/docker.tar" \
        "$CI_REGISTRY_IMAGE:$FULL_VERSION" \
          "$CI_REGISTRY_IMAGE:$MAJOR_VERSION.$MINOR_VERSION" \
          "$CI_REGISTRY_IMAGE:$MAJOR_VERSION"
      fi
      set -e

publish:docker:
  image: docker:23
  stage: build
  needs: ["build:docker"]
  dependencies: ["build:docker"]
  only:
    - schedules
    - triggers
  script:
  - |
    set +e
    docker manifest inspect "$CI_REGISTRY_IMAGE:$FULL_VERSION"
    if [ $? -ne 0 ]; then
      docker login "$CI_REGISTRY" --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD"

      docker load --input "$CI_PROJECT_DIR/docker.tar"

      docker push "$CI_REGISTRY_IMAGE:$FULL_VERSION"
      docker push "$CI_REGISTRY_IMAGE:$MAJOR_VERSION.$MINOR_VERSION"
      docker push "$CI_REGISTRY_IMAGE:$MAJOR_VERSION"
    fi
    set -e